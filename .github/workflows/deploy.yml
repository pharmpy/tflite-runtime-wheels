name: Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
  pull_request:


jobs:
  build-wheels:
    name: build-wheels
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [windows-latest]
        python-version: ['3.10']
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install python dependencies
      run: pip install numpy pybind11 wheel
    - name: Clone tensorflow 
      uses: actions/checkout@v2
      with:
        repository: tensorflow/tensorflow
        ref: refs/tags/v2.12.0
    - name: Build wheel
      run: |
        echo 'import os' > path.py
        echo 'path = os.getenv("PATH")' >> path.py
        echo 'a = path.split(";")' >> path.py
        echo 'found = False' >> path.py
        echo 'keep = []' >> path.py
        echo 'for p in a:' >> path.py
        echo '  if "hostedtoolcache/windows/Python" in p:' >> path.py
        echo '    if found:' >> path.py
        echo '      continue' >> path.py
        echo '    else:' >> path.py
        echo '      found = True' >> path.py
        echo '  #p.replace("(", "\(").replace(")", "\)").replace(" ", "\ ")' >> path.py
        echo '  keep.append(p)' >> path.py
        echo '  print("QQ", p)' >> path.py
        echo 'print(";".join(keep))' >> path.py
        #export PATH=`python path.py`
      export PATH=/mingw64/bin:/usr/bin:/c/Users/runneradmin/bin:/c/Users/runneradmin/AppData/Roaming/Python/Python310/Scripts:/c/hostedtoolcache/windows/Python/3.10.11/x64/Scripts:/c/hostedtoolcache/windows/Python/3.10.11/x64:/bin:/c/Windows/system32:/c/Windows:/cmd:/mingw64/bin:/usr/bin
        echo $PATH
        rm /c/hostedtoolcache/windows/Python/3.9.13/python.exe
        . tensorflow/lite/tools/pip_package/build_pip_package_with_bazel.sh
      shell: bash
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: wheel-${{ matrix.platform }}-${{ matrix.python-version }}
        path: tensorflow/lite/tools/pip_package/gen/tflite_pip/python3/dist/*.whl

  upload-wheels:
    needs: build-wheels
    name: upload-wheels
    runs-on: ubuntu-latest
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v2
    - name: Prepare upload
      run: |
        mkdir upload
        find . -name '*.whl' | xargs cp -t upload/
        ls -lR
